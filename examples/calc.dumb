.source                     # Required header
LOCK 0xFF                   # Set the stack length to 255
FILL 0x00                   # Initialize the stack with 0x00

TAKE                        # Ask for the first number (input goes to RESULT)
PRES                        # Print the first input as a string (char output)
FINT                        # Convert input from string to integer
POKE Px00,0x00              # Store the first number in stack position 0x00

TAKE                        # Ask for the second number (input goes to RESULT)
PRES                        # Print the second input as a string (char output)
FINT                        # Convert input from string to integer
POKE Px01,0x00              # Store the second number in stack position 0x01

ADDS Px00,Px01              # Add the two numbers (from the stack) and store in RESULT
TINT                        # Convert the result (integer) back to a string
PRES                        # Print the result
